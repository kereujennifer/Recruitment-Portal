@model Evaluation
@{
    ViewData["Title"] = "Create Model";
}

<h2>@ViewData["Title"]</h2>

<form method="post">
    <div class="form-group">
        <label for="title">Evaluation Title:</label>
        <input type="text" id="title" name="Title" class="form-control" required />
    </div>
    
    <div class="form-group">
        <label for="description">Description:</label>
        <textarea id="description" name="Description" class="form-control" required></textarea>
    </div>
    
    <h3>Questions:</h3>
    <div class="form-group">
        <label for="question">Question:</label>
        <input type="text" id="question" name="Question" class="form-control" required />
    </div>
    
    <div class="form-group">
        <label for="maxPoints">Max Points:</label>
        <input type="number" id="maxPoints"min="0" name="MaxPoints" class="form-control" required />
    </div>
    
    <button type="button" class="btn btn-primary" id="addQuestion">Add Question</button>
    <div id="questionsContainer">
        <!-- JavaScript will populate this container with added questions -->
    </div>

    <!-- ... Previous form content ... -->

    <h3>Added Questions:</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Question</th>
                <th>Max Points</th>
            </tr>
        </thead>
        <tbody id="addedQuestionsTableBody">
            <!-- JavaScript will populate this table body with added questions -->
        </tbody>
    </table>

    <button type="submit" class="btn btn-success">Save</button>


   
</form>



<!-- ... Previous form content ... -->
<!-- ... Previous form content ... -->
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const addQuestionButton = document.getElementById("addQuestion");
            const addedQuestionsTableBody = document.getElementById("addedQuestionsTableBody");

            let questionCounter = 0;

            addQuestionButton.addEventListener("click", function () {
                const questionInput = document.getElementById("question");
                const maxPointsInput = document.getElementById("maxPoints");
                const question = questionInput.value.trim(); // Trim leading and trailing spaces
                const maxPoints = maxPointsInput.value;

                if (question || maxPoints) {
                    const questionRowHtml = `
                        <tr>
                            <td>${question}</td>
                            <td>${maxPoints}</td>
                        </tr>
                    `;

                    addedQuestionsTableBody.innerHTML += questionRowHtml;

                    // Create hidden inputs only if a question is provided
                    if (question) {
                        const questionInputHtml = `<input type="hidden" name="Questions[${questionCounter}].Question" value="${question}" />`;
                        const maxPointsInputHtml = `<input type="hidden" name="Questions[${questionCounter}].MaxPoints" value="${maxPoints}" />`;
                        addedQuestionsTableBody.insertAdjacentHTML("beforeend", questionInputHtml);
                        addedQuestionsTableBody.insertAdjacentHTML("beforeend", maxPointsInputHtml);
                        questionCounter++;
                    }

                    // Clear the input fields after adding
                    questionInput.value = "";
                    maxPointsInput.value = "";
                }
            });
        });


    </script>
}





